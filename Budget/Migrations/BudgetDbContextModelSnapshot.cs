// <auto-generated />
using System;
using Budget.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Budget.Migrations
{
    [DbContext(typeof(BudgetDbContext))]
    partial class BudgetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Budget.Entities.BudgetCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BudgetEntityId")
                        .HasColumnType("int");

                    b.Property<string>("EventType")
                        .HasColumnType("longtext");

                    b.Property<double?>("PricePercentage")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("BudgetEntityId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Budget.Entities.BudgetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualTotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("EstimatedTotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("Budget.Entities.BudgetExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Budget.Entities.BudgetCategory", b =>
                {
                    b.HasOne("Budget.Entities.BudgetEntity", null)
                        .WithMany("BudgetCategories")
                        .HasForeignKey("BudgetEntityId");
                });

            modelBuilder.Entity("Budget.Entities.BudgetExpense", b =>
                {
                    b.HasOne("Budget.Entities.BudgetCategory", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Budget.Entities.BudgetCategory", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("Budget.Entities.BudgetEntity", b =>
                {
                    b.Navigation("BudgetCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
